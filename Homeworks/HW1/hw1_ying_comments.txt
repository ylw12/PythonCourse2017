Overall, great job!

- Your implementation of classes is great!  A tip for making it even better.  You could define a class (like “Assets”) that your Stock and MutualFund classes could inherit from (like our Animal example in class).  Then you could easily add a Bond class that also inherits from Assets, as well.

- Great job raising errors!

- A cleaner, and more foolproof, way to initialize your Portfolio class would be to assign your instance member variables (cash, stock, fund, hist) their initialization value when you define them and not when the user initializes the object.  The way you have it now could lead to problems!  self.stock, for example, doesn’t get initialized.  Try running this to see what I’m talking about:

class Portfolio(object):
    def __init__(self, cash=0, stock={}, fund={}, hist=[]):
        '''Initialize dictionaries for a client's stocks and funds'''
        self.cash = float(cash)
        self.stock = stock
        self.fund = fund
        self.hist = hist

p = Portfolio()
p.stock ## should print an empty dictionary

- All_stocks is a variable you use in your program that is globally defined.  This could lead to errors! Try to think of an implementation of your program that would have everything needed to run the program confined to the classes and their attributes and methods.

- If you wrap something in float() and then do any operation (+, -, *, etc.), the result will be a float.  Therefore, no need to wrap each argument (e.g., line 32) in float().  I know you are probably nervous about the rounding of integers! But many of the floats() in your program are redundant.

## Let me know if you have any questions about the homework or my comments!

Functionality: 4.75/5
Efficiency: 2.75/3
Readability: 2/2
Bonus: 0/1
Grade: 9.5/10